{"version":3,"file":"static/js/106.a2567581.chunk.js","mappings":"gMAGA,MASA,EATkBA,KAEdC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,yBACJC,EAAAA,EAAAA,KAACC,EAAAA,QAAmB,M,mGCH1B,MA0DA,EA1D4BA,KAC1B,MAAOC,EAAWC,IAAgBC,EAAAA,EAAAA,UAAS,CAAC,GAiD5C,OA/CAC,EAAAA,EAAAA,YAAU,KAER,MAiBMC,EAAmBC,IAEvB,MACMC,EADgBD,EAAKE,QAAOC,GAAQA,EAAKC,OAChBC,KAAIF,GAAQ,IAAIC,KAAKD,EAAKC,QACnDE,EAAQ,CAAC,EAEfL,EAASM,SAAQC,IACf,MAAMC,EAAO,GAAGD,EAAKE,kBAAkBC,KAAKC,KAAKJ,EAAKK,UAAY,KAClEP,EAAMG,IAASH,EAAMG,IAAS,GAAK,CAAC,IAGtC,MAAMK,EAASC,OAAOC,KAAKV,GACrBW,EAASF,OAAOE,OAAOX,GAE7BV,EAAa,CACXkB,OAAQA,EACRI,SAAU,CACR,CACEC,MAAO,yBACPnB,KAAMiB,KAGV,EAvCaG,WACf,MACMC,SADiBC,MAAM,kBACLC,KAAKC,YACvBC,QAAeJ,EAAOK,OAEtBC,EADU,IAAIC,YAAY,UACZC,OAAOJ,EAAOK,OAGlCC,IAAAA,MAAWJ,EAAK,CACdK,QAAQ,EACRC,SAAWC,IACTnC,EAAgBmC,EAAQlC,KAAK,GAE/B,EA6BJmC,EAAU,GACT,KAGD5C,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,sCACJC,EAAAA,EAAAA,KAAC2C,EAAAA,GAAG,CAACpC,KAAML,MACP,C","sources":["Projets_Musculation/Exercices.js","Projets_Musculation/GymBookComponent.js"],"sourcesContent":["import React from 'react';\nimport WeeklySessionsChart from './GymBookComponent';\n\nconst Exercices = () => {\n  return (\n    <div>\n      <h2>Liste des Exercices</h2>\n      <WeeklySessionsChart />\n    </div>\n  );\n};\n\nexport default Exercices;","import React, { useEffect, useState } from 'react';\nimport Papa from 'papaparse';\nimport { Bar } from 'react-chartjs-2';\n\nconst WeeklySessionsChart = () => {\n  const [chartData, setChartData] = useState({});\n\n  useEffect(() => {\n    // Fonction pour lire le fichier CSV\n    const fetchCSV = async () => {\n      const response = await fetch('./GymBook.csv');\n      const reader = response.body.getReader();\n      const result = await reader.read();\n      const decoder = new TextDecoder('utf-16');\n      const csv = decoder.decode(result.value);\n\n      // Parser le CSV avec papaparse\n      Papa.parse(csv, {\n        header: true,\n        complete: (results) => {\n          processSessions(results.data);\n        },\n      });\n    };\n\n    // Fonction pour traiter les données et préparer le graphique\n    const processSessions = (data) => {\n      // Filtrer les lignes avec une date définie\n      const validSessions = data.filter(item => item.Date);\n      const sessions = validSessions.map(item => new Date(item.Date));\n      const weeks = {};\n\n      sessions.forEach(date => {\n        const week = `${date.getFullYear()}-W${Math.ceil(date.getDate() / 7)}`;\n        weeks[week] = (weeks[week] || 0) + 1;\n      });\n\n      const labels = Object.keys(weeks);\n      const values = Object.values(weeks);\n\n      setChartData({\n        labels: labels,\n        datasets: [\n          {\n            label: 'Séances par semaine',\n            data: values,\n          },\n        ],\n      });\n    };\n\n    fetchCSV();\n  }, []);\n\n  return (\n    <div>\n      <h2>Nombre de séances par semaine</h2>\n      <Bar data={chartData} />\n    </div>\n  );\n};\n\nexport default WeeklySessionsChart;\n"],"names":["Exercices","_jsxs","children","_jsx","WeeklySessionsChart","chartData","setChartData","useState","useEffect","processSessions","data","sessions","filter","item","Date","map","weeks","forEach","date","week","getFullYear","Math","ceil","getDate","labels","Object","keys","values","datasets","label","async","reader","fetch","body","getReader","result","read","csv","TextDecoder","decode","value","Papa","header","complete","results","fetchCSV","Bar"],"sourceRoot":""}